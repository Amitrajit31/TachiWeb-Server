plugins {
    id "application"
    id "com.jfrog.bintray" version "1.7.3"
    id 'maven-publish'
}

mainClassName = "xyz.nulldev.ts.TachiServer"

dependencies {
    // AndroidCompat
    compile project(":AndroidCompat")

    // Tachiyomi-App
    compile project(":Tachiyomi-App")

    // Tachiyomi web UI
    compile project(":tachiwebui")

    // Config API
    compile project(":TachiServer/Config")

    // Spark Web Framework
    compile "com.sparkjava:spark-core:2.5.5"
    compile "junit:junit:4.12"

    // Database
    compile "org.xerial:sqlite-jdbc:3.16.1"

    // ICU Library (duplicated here from JVMPatch to fix resource bundle issues)
    compile group: 'com.ibm.icu', name: 'icu4j', version: '59.1'
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

//Set application run dir
def runningDir = new File("build/app-run")
runningDir.mkdirs()
tasks.run.workingDir = runningDir.absolutePath

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['SnapshotPublication']
    publish = true
    pkg {
        repo = 'tachiweb'
        name = 'tachiweb-server-snapshots'
        version {
            name = "${getGitHash()}-DEV"
            desc = 'TachiWeb-Server development build'
            released  = new Date()
        }
    }
}

publishing {
    publications {
        SnapshotPublication(MavenPublication) {
            groupId 'xyz.nulldev.ts'
            artifactId 'tachiweb-server-snapshots'
            artifact(fatJar.archivePath) {
                builtBy assemble
            }
            version "${getGitHash()}-DEV"
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

assemble.dependsOn fatJar
